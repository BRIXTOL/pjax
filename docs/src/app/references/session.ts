export default {
  uuid: 'UUID reference to the page snapshot HTML Document element',
  session: 'The session identifier. This is used to determine the connection digest. It is a random 4 digit number. When using a persisted session this is the id used by the session storage and other internal logic. 1001',
  visits: 'The number of visits made to this page 1',
  ts: 'The exit timestamp, ie: the last time page was viewed 834916',
  data: 'Passed data from spx-data="" attributes. { string: \'string\', boolean: false, number: 100, array: [1,2,3], object: { prop: \'value\' }}',
  key: 'The URL cache key and current url pathname.',
  rev: 'The previous page cache key url path. If this value matches the "key" then it is a first visit.',
  type: 'A store type number reference which determines how the record was saved. Used by events and internally',
  title: 'The Document title. The value is written in the post-request cycle before caching occurs.',
  scrollX: 'Scroll X position of the next navigation, this field will be updated according to history, which means navigating away from this page will update this record. - x - Equivalent to scrollLeft in pixels',
  scrollY: 'Scroll Y position of the next navigation, this field will be updated according to history, which means navigating away from this page will update this record. - y - Equivalent to scrollTop in pixels',
  location: 'Location Records reference. This holds a parsed path reference of the page.',
  cache: 'Controls the caching engine for the link navigation. Option is enabled when cache preset config is true. Each href link can set a different cache option. Cache control is only operational on visits (clicks). Prefetches have no control of the cache operation.',
  target: 'List of additional fragment element selectors to target in the render cycle. Accepts any valid querySelector() string. The selectors defined here will be merged with the defined targets set in connection. [\'#main\', \'.header\', \'[data-attr]\', \'header\']',
  progress: 'Progress bar threshold delay.',
  threshold: 'Threshold timeout to be applied to proximity or hover prefetch operations.',
  render: 'The renderer method to apply on the next navigation.',
  hydrate: 'List of fragments to replace. When hydrate is used, it will run precedence over targets and only execute a replacement on the elements defined. [\'#main\', \'.header\', \'[data-attr]\', \'header\']',
  preserve: 'List of fragments to preserve during morph. This is typically used on hydrate and it will mimic spx-morph="false". [\'#main\', \'.header\', \'[data-attr]\', \'header\']',
  append: 'List of fragments to be appened from and to. Accepts multiple. [[\'#main\', \'.header\'], [\'[data-attr]\', \'header\']]',
  prepend: 'List of fragments to be prepend from and to. Accepts multiple. [[\'#main\', \'.header\'], [\'[data-attr]\', \'header\']]',
  proximity: 'Define proximity prefetch distance from which fetching should begin. This value is relative to the cursor offset of defined elements using the spx-proximity attribute.',

  origin: 'The URL origin name.',
  hostname: 'The URL Hostname.',
  pathname: 'The URL Pathname.',
  search: 'The URL search params. If none exist this property will be an empty string.',
  hash: 'The URL Hash. If none exists then this property will be an empty string.',
};
